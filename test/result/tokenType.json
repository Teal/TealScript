{
    "isPredefinedType": [
        "any","number","boolean","string","symbol","void","never","this","null","undefined","char","byte","int","long","short","uint","ulong","ushort","float","double","*","?"
    ],
    "isTypeNodeStart": [
        "any","number","boolean","string","symbol","void","never","this","null","undefined","char","byte","int","long","short","uint","ulong","ushort","float","double","*","?", "identifier", "(", "[", "{", "<", "=>", "typeof", "numericLiteral", "stringLiteral", "true", "false"
    ],
    "isSimpleLiteral": [
        "null",
        "true",
        "false",
        "this",
        "super"
    ],
    "isUnaryOperator": [
        "delete","void","typeof","+","-","~","!","++","--","...", // Unary+Binary
    ],
    "isBinaryOperator": [
       ",","*=","/=","%=","+=","‚Äê=","<<=",">>=",">>>=","&=","^=","|=","**=","=","||","&&","|","^","&","==","!=","===","!==","<",">","<=",">=","instanceof","in","<<",">>",">>>","+","-","*","/","%","**", // Unary+Binary
    ],
    "isBindingNameStart": [
        "identifier", "[", "{", // idenftierName
    ],
    "isModifier": [
        "abstract",
        "async",
        "const",
        "declare",
        "default",
        "export",
        "public",
        "private",
        "protected",
        "readonly",
        "static"
    ],
    "isDeclarationStart": [
        "export",
        "async",
        "private",
        "protected",
        "public",
        "static",
        "abstract",
        "declare",
        "readonly",
        "enum",
        "interface",
        "class",
        "function"
    ],
    "isStatementStart": [
        "if",
        "switch",
        "for",
        "while",
        "do",
        "continue",
        "break",
        "return",
        "throw",
        "try",
        "debugger",
        "with",
        "var",
        "const",
        "let",
        "import",
        "package",
        "type",
        "namespace",
        "module"
    ],
    "isExpressionStart": [
        "export",
        "async",
        "private",
        "protected",
        "public",
        "static",
        "abstract",
        "declare",
        "readonly",
        "enum",
        "interface",
        "class",
        "function",
        "identifier",
        "numericLiteral",
        "stringLiteral",
        "regularExpressionLiteral",
        "noSubstitutionTemplateLiteral",
        "templateHead",
        "null",
        "true",
        "false",
        "this",
        "super",
        "openBrace",
        "exclamation",
        "new",
        "delete",
        "typeof",
        "void",
        "tilde",
        "yield",
        "await",
        "at",
        "openParen",
        "openBracket",
        "plus",
        "minus",
        "slash",
        "plusPlus",
        "minusMinus",
        "lessThan",
        "equalsGreaterThan",
        "dotDotDot"
    ],
    "isKeyword": [
        "unknown",
        "endOfFile",
        "export",
        "async",
        "private",
        "protected",
        "public",
        "static",
        "abstract",
        "declare",
        "readonly",
        "enum",
        "interface",
        "class",
        "function",
        "identifier",
        "numericLiteral",
        "stringLiteral",
        "regularExpressionLiteral",
        "noSubstitutionTemplateLiteral",
        "templateHead",
        "null",
        "true",
        "false",
        "this",
        "super",
        "openBrace",
        "exclamation",
        "new",
        "delete",
        "typeof",
        "void",
        "tilde",
        "yield",
        "await",
        "at",
        "openParen",
        "openBracket",
        "plus",
        "minus",
        "slash",
        "plusPlus",
        "minusMinus",
        "lessThan",
        "equalsGreaterThan",
        "dotDotDot",
        "dot",
        "dotDot",
        "questionDot",
        "asterisk",
        "ampersand",
        "in",
        "instanceOf",
        "percent",
        "greaterThan",
        "lessThanEquals",
        "greaterThanEquals",
        "equalsEquals",
        "exclamationEquals",
        "equalsEqualsEquals",
        "exclamationEqualsEquals",
        "lessThanLessThan",
        "greaterThanGreaterThan",
        "greaterThanGreaterThanGreaterThan",
        "bar",
        "caret",
        "ampersandAmpersand",
        "barBar",
        "asteriskAsterisk",
        "equals",
        "plusEquals",
        "minusEquals",
        "asteriskEquals",
        "slashEquals",
        "percentEquals",
        "lessThanLessThanEquals",
        "greaterThanGreaterThanEquals",
        "greaterThanGreaterThanGreaterThanEquals",
        "ampersandEquals",
        "barEquals",
        "caretEquals",
        "asteriskAsteriskEquals",
        "question",
        "comma",
        "as",
        "is",
        "closeParen",
        "closeBracket",
        "closeBrace",
        "colon",
        "semicolon",
        "templateMiddle",
        "templateTail",
        "if",
        "switch",
        "for",
        "while",
        "do",
        "continue",
        "break",
        "return",
        "throw",
        "try",
        "debugger",
        "with",
        "var",
        "const",
        "let",
        "import",
        "package",
        "type",
        "namespace",
        "module",
        "else",
        "case",
        "default",
        "catch",
        "finally",
        "from",
        "extends",
        "implements",
        "of",
        "to",
        "get",
        "set",
        "undefined",
        "constructor",
        "global",
        "any",
        "boolean",
        "number",
        "string",
        "symbol",
        "never"
    ],
    "isReservedWord": [
        "export",
        "async",
        "private",
        "protected",
        "public",
        "static",
        "abstract",
        "declare",
        "readonly",
        "enum",
        "interface",
        "class",
        "super",
        "yield",
        "await",
        "as",
        "is",
        "const",
        "let",
        "import",
        "package",
        "type",
        "namespace",
        "module",
        "from",
        "extends",
        "implements",
        "of",
        "to",
        "get",
        "set",
        "undefined",
        "constructor",
        "global",
        "any",
        "boolean",
        "number",
        "string",
        "symbol",
        "never"
    ]
}